{"ast":null,"code":"var _jsxFileName = \"/home/shilpa/Desktop/react/task/src/components/BodyContents/CheckBox/CheckBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CheckBox = ({\n  label,\n  selected\n}) => {\n  _s();\n\n  const [checked, setChecked] = useState([]);\n\n  const handleChange = value => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkbox_style1\",\n    children: label.map(category => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"checkbox_align form-check-label \",\n        htmlFor: category.name,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: () => handleChange(category.id),\n          className: \"checkbox_style form-check-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), category.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckBox, \"wpcTo92rLAYHEZ4hrradcMGvahE=\");\n\n_c = CheckBox;\nCheckBox.propTypes = {\n  selected: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired\n};\nexport default CheckBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"sources":["/home/shilpa/Desktop/react/task/src/components/BodyContents/CheckBox/CheckBox.js"],"names":["React","useState","PropTypes","CheckBox","label","selected","checked","setChecked","handleChange","value","currentIndex","indexOf","newChecked","push","splice","map","category","name","id","propTypes","bool","isRequired","string"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAAA;;AACxC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,YAAY,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,KAAhB,CAArB;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGN,OAAJ,CAAnB;;AAEA,QAAII,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACD,KAFD,MAEO;AACLG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACD;;AACDH,IAAAA,UAAU,CAACK,UAAD,CAAV;AACD,GAVD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACGR,KAAK,CAACW,GAAN,CAAWC,QAAD,iBACT;AAAA,6BACE;AAAO,QAAA,SAAS,EAAC,kCAAjB;AAAoD,QAAA,OAAO,EAAEA,QAAQ,CAACC,IAAtE;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,QAAQ,EAAE,MAAMT,YAAY,CAACQ,QAAQ,CAACE,EAAV,CAF9B;AAGI,UAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,gBADF,EAMGF,QAAQ,CAACC,IANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA7BD;;GAAMd,Q;;KAAAA,Q;AA+BNA,QAAQ,CAACgB,SAAT,GAAqB;AACnBd,EAAAA,QAAQ,EAAEH,SAAS,CAACkB,IAAV,CAAeC,UADN;AAEnBjB,EAAAA,KAAK,EAAEF,SAAS,CAACoB,MAAV,CAAiBD;AAFL,CAArB;AAKA,eAAelB,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBox = ({ label, selected }) => {\n  const [checked, setChecked] = useState([]);\n  const handleChange = (value) => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n  return (\n    <div className=\"checkbox_style1\">\n      {label.map((category) => (\n        <>\n          <label className=\"checkbox_align form-check-label \" htmlFor={category.name}>\n            <input\n              type=\"checkbox\"\n              onChange={() => handleChange(category.id)}\n                className=\"checkbox_style form-check-input\"\n            />\n            {category.name}\n          </label>\n        </>\n      ))}\n    </div>\n  );\n};\n\nCheckBox.propTypes = {\n  selected: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport default CheckBox;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}